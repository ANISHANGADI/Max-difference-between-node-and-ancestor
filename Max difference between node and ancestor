/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int func(TreeNode* root,int left,int right)
    {
        if(root==NULL)
            return left-right;
        left = max(left,root->val);
         right= min(right,root->val);
        
        int m=func(root->left,left,right);
        int n=func(root->right,left,right);
        return max(m,n);
    }
    int maxAncestorDiff(TreeNode* root) {
        
       return func(root,root->val,root->val);
       
    }
};
